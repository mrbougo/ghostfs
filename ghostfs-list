#!/usr/bin/perl
# This program is free software. It comes without any warranty, to
# the extent permitted by applicable law. You can redistribute it
# and/or modify it under the terms of the Do What The Fuck You Want
# To Public License, Version 2, as published by Sam Hocevar. See
# http://sam.zoy.org/wtfpl/COPYING for more details.

use strict;
use warnings;

use Fcntl ':mode';
use File::Find;
use Pod::Usage;

my %types_itos = (
	(S_IFREG) => 'f',
	(S_IFDIR) => 'd',
	(S_IFLNK) => 'l',
);

sub make_findfile {
	my ($root,$fdesc) = @_;

	chdir $root;
	find( sub{
		my $path = $File::Find::name;
		my @stat = lstat $_;

		my $mode = $stat[2];
		my $typechr = $types_itos{$mode & S_IFMT};
		unless (defined $typechr) {
			warn "unsupported filemode ", sprintf("%#o", $mode), " in $path\n";
			return 0;
		}
		my $perms = sprintf('%#o', $mode & 07777);
		my $target = $typechr eq 'l' ? readlink $_ : '';

		my @times = @stat[8,9,10];
		
		local $, = "\000";
		local $\ = "\000\n";
		print $fdesc ($path, "$stat[4]:$stat[5]", @times, $stat[7], $typechr, $target, $perms);
	}, '.');
}

my $dir = $ARGV[0];

pod2usage({ -message => 'Wrong argument count', -exitval => 2 }) if @ARGV != 1;
pod2usage({ -message => 'Not a directory', -exitval => 2 }) if ! -d $dir;

make_findfile($dir, \*STDOUT);

__END__

=head1 NAME

ghostfs-list - List generator for ghostfs

=head1 SYNOPSIS

B<ghostfs-list> I<directory>

=head1 DESCRIPTION

This script generates a file list for B<ghostfs>. It takes a directory as argument and outputs the list to stdout.

=head1 SEE ALSO

B<ghostfs>
